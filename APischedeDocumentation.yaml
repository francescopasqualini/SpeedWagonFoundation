swagger: '2.0'
info:
  version: '1.0'
  title: "progettois2 "
  description: Our API allow users to fetch many informations about their gym and their progresses
# You should put here the URL to your Heroku instance    
host: se2-movies.herokuapp.com
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /schede:
    # x-summary: Users collection
    post:
      description: >-
        You may create a training plan using this action. It takes a JSON
        object containing the properties of a training plan.
      summary: Create a new training plan
      consumes:
      - application/json
      produces:
      - application/json       
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/scheda'
      responses:
        200:
          description: Successful Response

    
  /schede/{schedaId}:
    get:
      summary: Returns a training plan by ID.
      parameters:
      - name: schedaId
        in: path
        required: true
        description: The id of the training plan
        type : integer
        format: int64
        minimum: 1
      responses: 
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/scheda'
        404:
          description: The required id was not found
          schema:
            $ref: '#/definitions/error404'
    delete:
      summary: Delete a training plan by ID.
      parameters:
      - name: schedaId
        in: path
        required: true
        description: The id of the required user
        type : integer
        format: int64
        minimum: 1
      responses:
        200:
          description: Successful Response
        404:
          description: The required id was not found
          schema:
            $ref: '#/definitions/error404'
    put:
      summary: Modify a training plan by ID.
      description: >-
        You may modify a training plan using this action. It takes a JSON
        object containing the properties of a user that have to be modified.
      consumes:
      - application/json
      produces:
      - application/json  
      parameters:
      - name: schedaId
        in: path
        required: true
        description: The id of the required training plan
        type : integer
        format: int64
        minimum: 1
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/scheda'
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/scheda'
        404:
          description: The required id was not found
          schema:
            $ref: '#/definitions/error404'
            
    
    
tags:
  - name: user
    description: Everything about your Pets
definitions:
  # This is just a simple model for that defines the Primary Key
  # We could reuse this on the rest of our models.
  PK:
    type: object
    properties:
      id:
        type: number
        description: The identifier.
        
        
  # This is a base Movie model that "packs" the basic properties
  # to avoid repeating ourselves.
  
  scheda:
    title: scheda
    type: object
    properties:
      username:
         type: string
         readOnly: true
         description: the username of the user. Read only
      N_esercizi:
        type: integer
        description: the number of excercise
      esercizi:
        type: object
        description: the name of the user
    example:
        username: "bruno"
        N_esercizi: 2
        esercizi: {
          esercizio1: {
              "id" : 1,
              "nome" : "panca",
              "tempo_recupero": 120,
              "peso": 20,
              "nserie": 5,
              "nripetizioni": 5,
              "descrizione": "usa la panca"
          },
          esercizio2:{
              "id" : 2,
              "nome" : "flessioni",
              "tempo_recupero": 60,
              "peso": 1,
              "nserie": 7,
              "nripetizioni": 2,
              "descrizione": "fai le flessioni"
          }
        }
        

  error404:
    title: error
    type: object
    properties:
      error: 
        type: string
        description: type of error
    example: 
      error: id not found
