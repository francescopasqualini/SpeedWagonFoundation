swagger: '2.0'
info:
  version: '1.0'
  title: "ProgettoIS2 API"
  description:  Our API allow users to fetch many informations about their gym and their progresses.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE   
host: speedwagonfoundation-app.herokuapp.com
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:

  /info:
    x-summary: Gym Information Collection
    
    get:
      summary: List All Info in the database
      produces:
      - application/json      
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Info'
            example:
              - id: "orario"
                apertura_feriale: "7.00"
                chiusura_feriale: "22.30"
                apertura_festiva: "10.00"
                chiusura_festiva: "20.00"
              - id: "corsi"
                difesa_personale: "lun, mer, ven dalle 16.30 alle 18.00"
                cardio_fitness: "mar, gio dalle 16.30 alle 17.30"
                box: "lun, mer, ven dalle 18.30 alle 20.30"
                pilates: "mar, gio dalle 18.30 alle 20.00"
                yoga: "tutti i giorni dalle 21 alle 22"

    post:
      description: >-
        You may create new information using this action. It takes a JSON
        object containing the information you want to add.
      summary: Create a New Info
      consumes:
      - application/json
      produces:
      - application/json       
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Info'
      responses:
        201:
          description: Info Created
          schema:
              type: object
              properties:
                OK: 
                  type: string
                  description: Info creata con successo!
              example: 
                OK : "Info creata con successo!"
        404:
          description: You have not specify the field id or you have specify an id already in use
          schema: 
            $ref: '#/definitions/error404'
      
  /info/{id}:
  
    x-summary: One specific information
    
    get:
      summary: Retrive the specified information
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the information you want to retrive
        type : string
      produces:
      - application/json
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            items:
              $ref: '#/definitions/Info'
            example:
              - id: "orario"
                apertura_feriale: "7.00"
                chiusura_feriale: "22.30"
                apertura_festiva: "10.00"
                chiusura_festiva: "20.00"
    
    put:
      description: >-
        You may modify an existing information using this action. It takes a JSON
        object containing what you want to change or add.
      summary: Modify an info
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the information you want to retrive
        type : string
      consumes:
      - application/jason
      produces:
      - application/json
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              OK:
                type: string
                description: What you have done
            example: 
              OK : "Info modificata con successo!"
        404:
          description: You have specify an id already in use
          schema: 
            $ref: '#/definitions/error404'
            
    delete:
      description: >-
        You may delete an existing information using this action.
      summary: Delete an info
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the information you want to retrive
        type : string
      produces:
      - application/json
      responses:
        200:
          description: Successful Response
          schema:
            title: success
            type: object
            properties:
              OK:
                type: string
                description: What you have done
            example: 
              OK : "Info eliminata con successo!"
        404:
          description: You have specify an id not in use
          schema: 
            $ref: '#/definitions/error404'
            
  /info/{id}/{key}:
  
    x-summary: One specific field of an informatio
    get:
      summary: Retrive the specified field of the specified information
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the information you want to retrive
        type : string
      - name: key
        in: path
        required: true
        description: The field of the specified information you want to retrive
        type : string
      produces:
      - application/json
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              key: 
                type: string
                description: Target Information 
            example:
              - apertura_festiva: "10.00"
                
    delete:
      description: >-
        You may delete a field of an existing information using this action.
      summary: Delete an info
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the information you want to retrive
        type : string
      - name: key
        in: path
        required: true
        description: The field of the specified information you want to retrive
        type : string
      produces:
      - application/json
      responses:
        200:
          description: Successful Response
          schema:
            title: success
            type: object
            properties:
              OK:
                type: string
                description: What you have done
            example: 
              OK : "Info eliminata con successo!"
        404:
          description: You have specify an id not in use or a field that does not exist
          schema: 
            $ref: '#/definitions/error404'
        500:
          description: You want to delete the field id
          schema:
            type: object
            properties:
              ERRORE: 
                type: string
                description: type of error
            example:
              - ERRORE: "Impossibile eliminare il campo type!"
          


definitions:
  # This is just a simple model for that defines the Primary Key
  # We could reuse this on the rest of our models.
  PK:
    type: object
    properties:
      id:
        type: number
        description: The identifier.
      
  Info:
    title: Information
    type: object
    properties:
      id:
        type: string
        readOnly: true
      info1:
        type: string
        readOnly: false
      info2:
        type: string
        readOnly: false
      info3:
        type: string
        readOnly: false
      # How many you need
    required:
      - id
    example:
      id: "orario"
      apertura_feriale: "7.00"
      chiusura_feriale: "22.30"
      apertura_festiva: "10.00"
      chiusura_festiva: "20.00"
      
  error404:
    title: error
    type: object
    properties:
      error: 
        type: string
        description: type of error
    example: 
      ERRORE: "Id non esistente!"
  
